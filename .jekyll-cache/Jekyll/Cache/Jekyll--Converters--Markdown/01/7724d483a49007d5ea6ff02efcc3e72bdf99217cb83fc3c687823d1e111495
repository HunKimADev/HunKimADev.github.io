I"<h2 id="rdbms란">RDBMS란?</h2>

<p><strong>R</strong>elational <strong>D</strong>ata<strong>B</strong>ase <strong>M</strong>anagement <strong>S</strong>ystem의 약자로 관계형 데이터베이스 관리시스템을 나타냅니다.
이름에서부터 알 수 있듯이</p>

<h4 id="rdbms의-장단점">RDBMS의 장단점</h4>
<ul>
  <li>초기 설계비용 (schema) : 단</li>
  <li>관계형 데이터 테이블</li>
  <li>데이터의 규격화, 유일화 (안정성 장, 그러나 유연성 x 단)</li>
  <li>스키마의 변경이 어려움</li>
  <li>테이블이 많아질 경우 (서비스의 규모가 커질 경우) 다수의 Join문으로 인해 쿼리문이 매우 복잡할 수 있음 단</li>
  <li>수정이 잦은 데이터 ok</li>
  <li>수직적 확장만 가능 (비용이 비쌈) 단</li>
</ul>

<h4 id="nosql의-장단점">NoSQL의 장단점</h4>
<ul>
  <li>데이터 형식과 크기의 자유로움 : 장</li>
  <li>데이터에 새로운 항목을 추가해야 할 때 규격이 없기때문에 그냥 추가하면 된다.</li>
  <li>데이터의 중복 저장, 수정시 중복된 모든 컬렉션에서 수정 필요 : 단</li>
  <li>수평적 확장 가능 (비용이 저렴) : 장</li>
  <li>막대한 양의 데이터를 처리할때 유리</li>
</ul>
:ET